{"version":3,"file":"wait-file.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["import fs from 'fs-extra';\r\nimport * as Joi from '@hapi/joi';\r\nimport Rx from 'rx';\r\n\r\nexport interface Opts {\r\n  resources: string[];\r\n  delay?: number;\r\n  interval?: number;\r\n  log?: boolean;\r\n  reverse?: boolean;\r\n  timeout?: number;\r\n  verbose?: boolean;\r\n  window?: number;\r\n}\r\n\r\ninterface File {\r\n  val: number;\r\n  data: Stats;\r\n}\r\n\r\ninterface Stats {\r\n  size: number;\r\n  [key: string]: any;\r\n}\r\n\r\ninterface Value {\r\n  [resource: string]: number;\r\n}\r\n\r\nconst WAIT_FILE_SCHEMA = Joi.object().keys({\r\n  resources: Joi.array()\r\n    .items(Joi.string().required())\r\n    .required(),\r\n  delay: Joi.number()\r\n    .integer()\r\n    .min(0)\r\n    .default(0),\r\n  interval: Joi.number()\r\n    .integer()\r\n    .min(0)\r\n    .default(250),\r\n  log: Joi.boolean().default(false),\r\n  reverse: Joi.boolean().default(false),\r\n  timeout: Joi.number()\r\n    .integer()\r\n    .min(0)\r\n    .default(Infinity),\r\n  verbose: Joi.boolean().default(false),\r\n  window: Joi.number()\r\n    .integer()\r\n    .min(0)\r\n    .default(750),\r\n});\r\n\r\nfunction waitFileImpl(oldOpts: Opts, cb: null | ((err?: Error) => any)) {\r\n  const validResult = Joi.validate(oldOpts, WAIT_FILE_SCHEMA);\r\n  if (validResult.error && cb) {\r\n    return cb(validResult.error);\r\n  }\r\n  const opts = validResult.value as Required<Opts>;\r\n\r\n  // it needs to be at least interval\r\n  if (opts.window < opts.interval) {\r\n    opts.window = opts.interval;\r\n  }\r\n\r\n  const output = opts.verbose ? console.log.bind(console) : function() {};\r\n\r\n  const log = opts.log ? console.log.bind(console) : function() {};\r\n\r\n  // the resources last known to be waiting for\r\n  let lastWaitForOutput: string;\r\n\r\n  let timeoutTimer: null | NodeJS.Timeout = null;\r\n  if (opts.timeout !== Infinity) {\r\n    timeoutTimer = setTimeout(function() {\r\n      log(\r\n        'wait-file(%s) timed out waiting for: %s; exiting with error',\r\n        process.pid,\r\n        lastWaitForOutput\r\n      );\r\n      cb && cb(new Error('Timeout'));\r\n    }, opts.timeout);\r\n  }\r\n\r\n  function cleanup(err?: Error) {\r\n    if (timeoutTimer) {\r\n      clearTimeout(timeoutTimer);\r\n      timeoutTimer = null;\r\n    }\r\n    if (cb) {\r\n      cb(err);\r\n      cb = null;\r\n    }\r\n  }\r\n\r\n  function createFile(file: string): Rx.Observable<File> {\r\n    const fstat = Rx.Observable.fromNodeCallback(fs.stat);\r\n    const source = (<unknown>fstat(file)) as Rx.Observable<Stats>;\r\n    const fakeStat = Rx.Observable.just({ size: -1 });\r\n    return Rx.Observable.catch(source, fakeStat).map(function(stat) {\r\n      return {\r\n        val: stat.size, // key comparator used\r\n        data: stat, // additional data for debugging\r\n      };\r\n    });\r\n  }\r\n\r\n  /* Stability checking occurs by using an Rx window,\r\n     It waits until all of the vals from the resources are >=0,\r\n     then it waits for a window which has no changes\r\n     (duplicate outputs are filtered by distinctUntilChanged)\r\n  */\r\n  let lastValues: Value | null = null;\r\n  const src = Rx.Observable.timer(opts.delay, opts.interval)\r\n    .concatMap(() => {\r\n      return Rx.Observable.from(opts.resources)\r\n        .concatMap(\r\n          function(resource: string) {\r\n            return createFile(resource);\r\n          },\r\n          function(resource: string, obj: File) {\r\n            return { resource: resource, val: obj.val, data: obj.data };\r\n          }\r\n        )\r\n        .reduce(function(acc: Value, x) {\r\n          acc[x.resource] = x.val;\r\n          return acc;\r\n        }, {});\r\n    })\r\n    .map(function(values: Value) {\r\n      lastValues = values; // save lastValues for later ref\r\n      return values;\r\n    })\r\n    .distinctUntilChanged()\r\n    .windowWithTime(opts.window);\r\n\r\n  function lastValuesAllAvailable(): boolean {\r\n    if (!lastValues) {\r\n      return false;\r\n    }\r\n    var notReady = opts.resources.filter(function(k) {\r\n      var lastValue = lastValues && lastValues[k];\r\n      var result = typeof lastValue !== 'number' || lastValue < 0;\r\n      return opts.reverse ? !result : result;\r\n    });\r\n\r\n    // only output when changes\r\n    var notReadyString = notReady.join(', ');\r\n    if (notReadyString && notReadyString !== lastWaitForOutput) {\r\n      log('wait-file(%s) waiting for: %s', process.pid, notReadyString);\r\n      lastWaitForOutput = notReadyString;\r\n    }\r\n\r\n    return !notReady.length;\r\n  }\r\n\r\n  let subsc = src.subscribe(\r\n    function(child) {\r\n      let childSub = child.toArray().subscribe(\r\n        function(x) {\r\n          output('child next', x);\r\n          if (lastValuesAllAvailable() && !x.length) {\r\n            output('stabilized');\r\n            log(\r\n              'wait-file(%s) exiting successfully found all: %s',\r\n              process.pid,\r\n              opts.resources.join(', ')\r\n            );\r\n            childSub.dispose();\r\n            subsc.dispose();\r\n            cleanup();\r\n          }\r\n        },\r\n        function(err) {\r\n          output('child err', err);\r\n        },\r\n        function() {\r\n          output('child complete');\r\n        }\r\n      );\r\n    },\r\n    function(err) {\r\n      output('err: ', err);\r\n      log('wait-file(%s) exiting with error', process.pid, err);\r\n      cleanup(err);\r\n    },\r\n    function() {\r\n      output('complete');\r\n      cleanup();\r\n    }\r\n  );\r\n}\r\n\r\nexport function waitFile(opts: Opts, cb?: (err?: Error) => any) {\r\n  if (cb && cb !== undefined) {\r\n    return waitFileImpl(opts, cb);\r\n  } else {\r\n    return new Promise((resolve, reject) => {\r\n      waitFileImpl(opts, err => {\r\n        if (err) {\r\n          reject(err);\r\n        } else {\r\n          resolve();\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n"],"names":["WAIT_FILE_SCHEMA","Joi","keys","resources","items","required","delay","integer","min","default","interval","log","reverse","timeout","Infinity","verbose","window","waitFileImpl","oldOpts","cb","validResult","error","opts","value","output","console","bind","lastWaitForOutput","timeoutTimer","cleanup","err","clearTimeout","setTimeout","process","pid","Error","lastValues","subsc","Rx","Observable","timer","concatMap","from","resource","file","source","fromNodeCallback","fs","stat","fstat","fakeStat","just","size","catch","map","val","data","createFile","obj","reduce","acc","x","values","distinctUntilChanged","windowWithTime","subscribe","child","childSub","toArray","notReady","filter","k","lastValue","result","notReadyString","join","length","lastValuesAllAvailable","dispose","undefined","Promise","resolve","reject"],"mappings":"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"}