{"remainingRequest":"/Volumes/workspace/github/liubang/LaserDB/docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Volumes/workspace/github/liubang/LaserDB/docs/node_modules/@docusaurus/theme-classic/lib/theme/NavbarItem/DefaultNavbarItem.js","dependencies":[{"path":"/Volumes/workspace/github/liubang/LaserDB/docs/node_modules/@docusaurus/theme-classic/lib/theme/NavbarItem/DefaultNavbarItem.js","mtime":1642676741559},{"path":"/Volumes/workspace/github/liubang/LaserDB/docs/babel.config.js","mtime":1642678208699},{"path":"/Volumes/workspace/github/liubang/LaserDB/docs/node_modules/cache-loader/dist/cjs.js","mtime":1642676720444},{"path":"/Volumes/workspace/github/liubang/LaserDB/docs/node_modules/babel-loader/lib/index.js","mtime":1642677262834}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1ZvbHVtZXMvd29ya3NwYWNlL2dpdGh1Yi9saXViYW5nL0xhc2VyREIvZG9jcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcy5qcyI7LyoqCiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLgogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGUKICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9pbXBvcnQgUmVhY3Qse3VzZVN0YXRlLHVzZVJlZix1c2VFZmZlY3R9ZnJvbSdyZWFjdCc7aW1wb3J0IGNsc3ggZnJvbSdjbHN4JztpbXBvcnQgTGluayBmcm9tJ0Bkb2N1c2F1cnVzL0xpbmsnO2ltcG9ydCB1c2VCYXNlVXJsIGZyb20nQGRvY3VzYXVydXMvdXNlQmFzZVVybCc7aW1wb3J0e3VzZUxvY2F0aW9ufWZyb20nQGRvY3VzYXVydXMvcm91dGVyJztpbXBvcnR7aXNTYW1lUGF0aH1mcm9tJy4uLy4uL3V0aWxzJztmdW5jdGlvbiBOYXZMaW5rKHthY3RpdmVCYXNlUGF0aCxhY3RpdmVCYXNlUmVnZXgsdG8saHJlZixsYWJlbCxhY3RpdmVDbGFzc05hbWU9J25hdmJhcl9fbGluay0tYWN0aXZlJyxwcmVwZW5kQmFzZVVybFRvSHJlZiwuLi5wcm9wc30pey8vIFRPRE8gYWxsIHRoaXMgc2VlbXMgaGFja3kKLy8ge3RvOiAndmVyc2lvbid9IHNob3VsZCBwcm9iYWJseSBiZSBmb3JiaWRkZW4sIGluIGZhdm9yIG9mIHt0bzogJy92ZXJzaW9uJ30KY29uc3QgdG9Vcmw9dXNlQmFzZVVybCh0byk7Y29uc3QgYWN0aXZlQmFzZVVybD11c2VCYXNlVXJsKGFjdGl2ZUJhc2VQYXRoKTtjb25zdCBub3JtYWxpemVkSHJlZj11c2VCYXNlVXJsKGhyZWYse2ZvcmNlUHJlcGVuZEJhc2VVcmw6dHJ1ZX0pO3JldHVybi8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KExpbmssX2V4dGVuZHMoe30saHJlZj97dGFyZ2V0OidfYmxhbmsnLHJlbDonbm9vcGVuZXIgbm9yZWZlcnJlcicsaHJlZjpwcmVwZW5kQmFzZVVybFRvSHJlZj9ub3JtYWxpemVkSHJlZjpocmVmfTp7aXNOYXZMaW5rOnRydWUsYWN0aXZlQ2xhc3NOYW1lLHRvOnRvVXJsLC4uLihhY3RpdmVCYXNlUGF0aHx8YWN0aXZlQmFzZVJlZ2V4P3tpc0FjdGl2ZTooX21hdGNoLGxvY2F0aW9uKT0+YWN0aXZlQmFzZVJlZ2V4P25ldyBSZWdFeHAoYWN0aXZlQmFzZVJlZ2V4KS50ZXN0KGxvY2F0aW9uLnBhdGhuYW1lKTpsb2NhdGlvbi5wYXRobmFtZS5zdGFydHNXaXRoKGFjdGl2ZUJhc2VVcmwpfTpudWxsKX0scHJvcHMpLGxhYmVsKTt9ZnVuY3Rpb24gTmF2SXRlbURlc2t0b3Aoe2l0ZW1zLHBvc2l0aW9uLGNsYXNzTmFtZSwuLi5wcm9wc30pe2NvbnN0IGRyb3Bkb3duUmVmPXVzZVJlZihudWxsKTtjb25zdCBkcm9wZG93bk1lbnVSZWY9dXNlUmVmKG51bGwpO2NvbnN0W3Nob3dEcm9wZG93bixzZXRTaG93RHJvcGRvd25dPXVzZVN0YXRlKGZhbHNlKTt1c2VFZmZlY3QoKCk9Pntjb25zdCBoYW5kbGVDbGlja091dHNpZGU9ZXZlbnQ9PntpZighZHJvcGRvd25SZWYuY3VycmVudHx8ZHJvcGRvd25SZWYuY3VycmVudC5jb250YWlucyhldmVudC50YXJnZXQpKXtyZXR1cm47fXNldFNob3dEcm9wZG93bihmYWxzZSk7fTtkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLGhhbmRsZUNsaWNrT3V0c2lkZSk7ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsaGFuZGxlQ2xpY2tPdXRzaWRlKTtyZXR1cm4oKT0+e2RvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsaGFuZGxlQ2xpY2tPdXRzaWRlKTtkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JyxoYW5kbGVDbGlja091dHNpZGUpO307fSxbZHJvcGRvd25SZWZdKTtjb25zdCBuYXZMaW5rQ2xhc3NOYW1lcz0oZXh0cmFDbGFzc05hbWUsaXNEcm9wZG93bkl0ZW09ZmFsc2UpPT5jbHN4KHsnbmF2YmFyX19pdGVtIG5hdmJhcl9fbGluayc6IWlzRHJvcGRvd25JdGVtLGRyb3Bkb3duX19saW5rOmlzRHJvcGRvd25JdGVtfSxleHRyYUNsYXNzTmFtZSk7aWYoIWl0ZW1zKXtyZXR1cm4vKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChOYXZMaW5rLF9leHRlbmRzKHtjbGFzc05hbWU6bmF2TGlua0NsYXNzTmFtZXMoY2xhc3NOYW1lKX0scHJvcHMpKTt9cmV0dXJuLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIse3JlZjpkcm9wZG93blJlZixjbGFzc05hbWU6Y2xzeCgnbmF2YmFyX19pdGVtJywnZHJvcGRvd24nLCdkcm9wZG93bi0taG92ZXJhYmxlJyx7J2Ryb3Bkb3duLS1sZWZ0Jzpwb3NpdGlvbj09PSdsZWZ0JywnZHJvcGRvd24tLXJpZ2h0Jzpwb3NpdGlvbj09PSdyaWdodCcsJ2Ryb3Bkb3duLS1zaG93JzpzaG93RHJvcGRvd259KX0sLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoTmF2TGluayxfZXh0ZW5kcyh7Y2xhc3NOYW1lOm5hdkxpbmtDbGFzc05hbWVzKGNsYXNzTmFtZSl9LHByb3BzLHtvbkNsaWNrOnByb3BzLnRvP3VuZGVmaW5lZDplPT5lLnByZXZlbnREZWZhdWx0KCksb25LZXlEb3duOmU9PntpZihlLmtleT09PSdFbnRlcicpe2UucHJldmVudERlZmF1bHQoKTtzZXRTaG93RHJvcGRvd24oIXNob3dEcm9wZG93bik7fX19KSxwcm9wcy5sYWJlbCksLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoInVsIix7cmVmOmRyb3Bkb3duTWVudVJlZixjbGFzc05hbWU6ImRyb3Bkb3duX19tZW51In0saXRlbXMubWFwKCh7Y2xhc3NOYW1lOmNoaWxkSXRlbUNsYXNzTmFtZSwuLi5jaGlsZEl0ZW1Qcm9wc30saSk9Pi8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJsaSIse2tleTppfSwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChOYXZMaW5rLF9leHRlbmRzKHtvbktleURvd246ZT0+e2lmKGk9PT1pdGVtcy5sZW5ndGgtMSYmZS5rZXk9PT0nVGFiJyl7ZS5wcmV2ZW50RGVmYXVsdCgpO3NldFNob3dEcm9wZG93bihmYWxzZSk7Y29uc3QgbmV4dE5hdmJhckl0ZW09ZHJvcGRvd25SZWYuY3VycmVudC5uZXh0RWxlbWVudFNpYmxpbmc7aWYobmV4dE5hdmJhckl0ZW0pe25leHROYXZiYXJJdGVtLmZvY3VzKCk7fX19LGFjdGl2ZUNsYXNzTmFtZToiZHJvcGRvd25fX2xpbmstLWFjdGl2ZSIsY2xhc3NOYW1lOm5hdkxpbmtDbGFzc05hbWVzKGNoaWxkSXRlbUNsYXNzTmFtZSx0cnVlKX0sY2hpbGRJdGVtUHJvcHMpKSkpKSk7fWZ1bmN0aW9uIE5hdkl0ZW1Nb2JpbGUoe2l0ZW1zLGNsYXNzTmFtZSxwb3NpdGlvbjpfcG9zaXRpb24sLy8gTmVlZCB0byBkZXN0cnVjdHVyZSBwb3NpdGlvbiBmcm9tIHByb3BzIHNvIHRoYXQgaXQgZG9lc24ndCBnZXQgcGFzc2VkIG9uLgouLi5wcm9wc30pe2NvbnN0e3BhdGhuYW1lfT11c2VMb2NhdGlvbigpO2NvbnN0W2NvbGxhcHNlZCxzZXRDb2xsYXBzZWRdPXVzZVN0YXRlKCgpPT57dmFyIF9pdGVtcyRzb21lO3JldHVybihfaXRlbXMkc29tZT0hKGl0ZW1zIT09bnVsbCYmaXRlbXMhPT12b2lkIDAmJml0ZW1zLnNvbWUoaXRlbT0+aXNTYW1lUGF0aChpdGVtLnRvLHBhdGhuYW1lKSkpKSE9PW51bGwmJl9pdGVtcyRzb21lIT09dm9pZCAwP19pdGVtcyRzb21lOnRydWU7fSk7Y29uc3QgbmF2TGlua0NsYXNzTmFtZXM9KGV4dHJhQ2xhc3NOYW1lLGlzU3ViTGlzdD1mYWxzZSk9PmNsc3goJ21lbnVfX2xpbmsnLHsnbWVudV9fbGluay0tc3VibGlzdCc6aXNTdWJMaXN0fSxleHRyYUNsYXNzTmFtZSk7aWYoIWl0ZW1zKXtyZXR1cm4vKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgibGkiLHtjbGFzc05hbWU6Im1lbnVfX2xpc3QtaXRlbSJ9LC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KE5hdkxpbmssX2V4dGVuZHMoe2NsYXNzTmFtZTpuYXZMaW5rQ2xhc3NOYW1lcyhjbGFzc05hbWUpfSxwcm9wcykpKTt9cmV0dXJuLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImxpIix7Y2xhc3NOYW1lOmNsc3goJ21lbnVfX2xpc3QtaXRlbScseydtZW51X19saXN0LWl0ZW0tLWNvbGxhcHNlZCc6Y29sbGFwc2VkfSl9LC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KE5hdkxpbmssX2V4dGVuZHMoe3JvbGU6ImJ1dHRvbiIsY2xhc3NOYW1lOm5hdkxpbmtDbGFzc05hbWVzKGNsYXNzTmFtZSx0cnVlKX0scHJvcHMse29uQ2xpY2s6KCk9PntzZXRDb2xsYXBzZWQoc3RhdGU9PiFzdGF0ZSk7fX0pLHByb3BzLmxhYmVsKSwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgidWwiLHtjbGFzc05hbWU6Im1lbnVfX2xpc3QifSxpdGVtcy5tYXAoKHtjbGFzc05hbWU6Y2hpbGRJdGVtQ2xhc3NOYW1lLC4uLmNoaWxkSXRlbVByb3BzfSxpKT0+LyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImxpIix7Y2xhc3NOYW1lOiJtZW51X19saXN0LWl0ZW0iLGtleTppfSwvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChOYXZMaW5rLF9leHRlbmRzKHthY3RpdmVDbGFzc05hbWU6Im1lbnVfX2xpbmstLWFjdGl2ZSIsY2xhc3NOYW1lOm5hdkxpbmtDbGFzc05hbWVzKGNoaWxkSXRlbUNsYXNzTmFtZSl9LGNoaWxkSXRlbVByb3BzLHtvbkNsaWNrOnByb3BzLm9uQ2xpY2t9KSkpKSkpO31mdW5jdGlvbiBEZWZhdWx0TmF2YmFySXRlbSh7bW9iaWxlPWZhbHNlLC4uLnByb3BzfSl7Y29uc3QgQ29tcD1tb2JpbGU/TmF2SXRlbU1vYmlsZTpOYXZJdGVtRGVza3RvcDtyZXR1cm4vKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDb21wLHByb3BzKTt9ZXhwb3J0IGRlZmF1bHQgRGVmYXVsdE5hdmJhckl0ZW07"},null]}