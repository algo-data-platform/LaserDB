{"remainingRequest":"/Volumes/workspace/github/liubang/LaserDB/docs/node_modules/babel-loader/lib/index.js??ref--7-1!/Volumes/workspace/github/liubang/LaserDB/docs/node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/index.js","dependencies":[{"path":"/Volumes/workspace/github/liubang/LaserDB/docs/node_modules/@docusaurus/theme-classic/lib/theme/CodeBlock/index.js","mtime":1642676741559},{"path":"/Volumes/workspace/github/liubang/LaserDB/docs/babel.config.js","mtime":1642678208699},{"path":"/Volumes/workspace/github/liubang/LaserDB/docs/node_modules/cache-loader/dist/cjs.js","mtime":1642676720444},{"path":"/Volumes/workspace/github/liubang/LaserDB/docs/node_modules/babel-loader/lib/index.js","mtime":1642677262834}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1ZvbHVtZXMvd29ya3NwYWNlL2dpdGh1Yi9saXViYW5nL0xhc2VyREIvZG9jcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcy5qcyI7LyoqCiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLgogKgogKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGUKICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLgogKi9pbXBvcnQgUmVhY3Qse3VzZUVmZmVjdCx1c2VTdGF0ZSx1c2VSZWZ9ZnJvbSdyZWFjdCc7aW1wb3J0IGNsc3ggZnJvbSdjbHN4JztpbXBvcnQgSGlnaGxpZ2h0LHtkZWZhdWx0UHJvcHN9ZnJvbSdwcmlzbS1yZWFjdC1yZW5kZXJlcic7aW1wb3J0IGNvcHkgZnJvbSdjb3B5LXRleHQtdG8tY2xpcGJvYXJkJztpbXBvcnQgcmFuZ2VQYXJzZXIgZnJvbSdwYXJzZS1udW1lcmljLXJhbmdlJztpbXBvcnQgdXNlUHJpc21UaGVtZSBmcm9tJ0B0aGVtZS9ob29rcy91c2VQcmlzbVRoZW1lJztpbXBvcnQgc3R5bGVzIGZyb20nLi9zdHlsZXMubW9kdWxlLmNzcyc7aW1wb3J0IHVzZVRoZW1lQ29uZmlnIGZyb20nLi4vLi4vdXRpbHMvdXNlVGhlbWVDb25maWcnO2NvbnN0IGhpZ2hsaWdodExpbmVzUmFuZ2VSZWdleD0veyhbXGQsLV0rKX0vO2NvbnN0IGdldEhpZ2hsaWdodERpcmVjdGl2ZVJlZ2V4PShsYW5ndWFnZXM9WydqcycsJ2pzQmxvY2snLCdqc3gnLCdweXRob24nLCdodG1sJ10pPT57Ly8gc3VwcG9ydGVkIHR5cGVzIG9mIGNvbW1lbnRzCmNvbnN0IGNvbW1lbnRzPXtqczp7c3RhcnQ6J1xcL1xcLycsZW5kOicnfSxqc0Jsb2NrOntzdGFydDonXFwvXFwqJyxlbmQ6J1xcKlxcLyd9LGpzeDp7c3RhcnQ6J1xce1xccypcXC9cXConLGVuZDonXFwqXFwvXFxzKlxcfSd9LHB5dGhvbjp7c3RhcnQ6JyMnLGVuZDonJ30saHRtbDp7c3RhcnQ6JzwhLS0nLGVuZDonLS0+J319Oy8vIHN1cHBvcnRlZCBkaXJlY3RpdmVzCmNvbnN0IGRpcmVjdGl2ZXM9WydoaWdobGlnaHQtbmV4dC1saW5lJywnaGlnaGxpZ2h0LXN0YXJ0JywnaGlnaGxpZ2h0LWVuZCddLmpvaW4oJ3wnKTsvLyB0byBiZSBtb3JlIHJlbGlhYmxlLCB0aGUgb3BlbmluZyBhbmQgY2xvc2luZyBjb21tZW50IG11c3QgbWF0Y2gKY29uc3QgY29tbWVudFBhdHRlcm49bGFuZ3VhZ2VzLm1hcChsYW5nPT5gKD86JHtjb21tZW50c1tsYW5nXS5zdGFydH1cXHMqKCR7ZGlyZWN0aXZlc30pXFxzKiR7Y29tbWVudHNbbGFuZ10uZW5kfSlgKS5qb2luKCd8Jyk7Ly8gd2hpdGUgc3BhY2UgaXMgYWxsb3dlZCwgYnV0IG90aGVyd2lzZSBpdCBzaG91bGQgYmUgb24gaXQncyBvd24gbGluZQpyZXR1cm4gbmV3IFJlZ0V4cChgXlxccyooPzoke2NvbW1lbnRQYXR0ZXJufSlcXHMqJGApO307Ly8gc2VsZWN0IGNvbW1lbnQgc3R5bGVzIGJhc2VkIG9uIGxhbmd1YWdlCmNvbnN0IGhpZ2hsaWdodERpcmVjdGl2ZVJlZ2V4PWxhbmc9Pntzd2l0Y2gobGFuZyl7Y2FzZSdqcyc6Y2FzZSdqYXZhc2NyaXB0JzpjYXNlJ3RzJzpjYXNlJ3R5cGVzY3JpcHQnOnJldHVybiBnZXRIaWdobGlnaHREaXJlY3RpdmVSZWdleChbJ2pzJywnanNCbG9jayddKTtjYXNlJ2pzeCc6Y2FzZSd0c3gnOnJldHVybiBnZXRIaWdobGlnaHREaXJlY3RpdmVSZWdleChbJ2pzJywnanNCbG9jaycsJ2pzeCddKTtjYXNlJ2h0bWwnOnJldHVybiBnZXRIaWdobGlnaHREaXJlY3RpdmVSZWdleChbJ2pzJywnanNCbG9jaycsJ2h0bWwnXSk7Y2FzZSdweXRob24nOmNhc2UncHknOnJldHVybiBnZXRIaWdobGlnaHREaXJlY3RpdmVSZWdleChbJ3B5dGhvbiddKTtkZWZhdWx0Oi8vIGFsbCBjb21tZW50IHR5cGVzCnJldHVybiBnZXRIaWdobGlnaHREaXJlY3RpdmVSZWdleCgpO319O2NvbnN0IGNvZGVCbG9ja1RpdGxlUmVnZXg9L3RpdGxlPSIuKiIvO2V4cG9ydCBkZWZhdWx0KCh7Y2hpbGRyZW4sY2xhc3NOYW1lOmxhbmd1YWdlQ2xhc3NOYW1lLG1ldGFzdHJpbmd9KT0+e2NvbnN0e3ByaXNtfT11c2VUaGVtZUNvbmZpZygpO2NvbnN0W3Nob3dDb3BpZWQsc2V0U2hvd0NvcGllZF09dXNlU3RhdGUoZmFsc2UpO2NvbnN0W21vdW50ZWQsc2V0TW91bnRlZF09dXNlU3RhdGUoZmFsc2UpOy8vIFRoZSBQcmlzbSB0aGVtZSBvbiBTU1IgaXMgYWx3YXlzIHRoZSBkZWZhdWx0IHRoZW1lIGJ1dCB0aGUgc2l0ZSB0aGVtZQovLyBjYW4gYmUgaW4gYSBkaWZmZXJlbnQgbW9kZS4gUmVhY3QgaHlkcmF0aW9uIGRvZXNuJ3QgdXBkYXRlIERPTSBzdHlsZXMKLy8gdGhhdCBjb21lIGZyb20gU1NSLiBIZW5jZSBmb3JjZSBhIHJlLXJlbmRlciBhZnRlciBtb3VudGluZyB0byBhcHBseSB0aGUKLy8gY3VycmVudCByZWxldmFudCBzdHlsZXMuIFRoZXJlIHdpbGwgYmUgYSBmbGFzaCBzZWVuIG9mIHRoZSBvcmlnaW5hbAovLyBzdHlsZXMgc2VlbiB1c2luZyB0aGlzIGN1cnJlbnQgYXBwcm9hY2ggYnV0IHRoYXQncyBwcm9iYWJseSBvay4gRml4aW5nCi8vIHRoZSBmbGFzaCB3aWxsIHJlcXVpcmUgY2hhbmdpbmcgdGhlIHRoZW1pbmcgYXBwcm9hY2ggYW5kIGlzIG5vdCB3b3J0aCBpdAovLyBhdCB0aGlzIHBvaW50Lgp1c2VFZmZlY3QoKCk9PntzZXRNb3VudGVkKHRydWUpO30sW10pO2NvbnN0IGJ1dHRvbj11c2VSZWYobnVsbCk7bGV0IGhpZ2hsaWdodExpbmVzPVtdO2xldCBjb2RlQmxvY2tUaXRsZT0nJztjb25zdCBwcmlzbVRoZW1lPXVzZVByaXNtVGhlbWUoKTtpZihtZXRhc3RyaW5nJiZoaWdobGlnaHRMaW5lc1JhbmdlUmVnZXgudGVzdChtZXRhc3RyaW5nKSl7Ly8gVGVzdGVkIGFib3ZlCi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbm9uLW51bGwtYXNzZXJ0aW9uCmNvbnN0IGhpZ2hsaWdodExpbmVzUmFuZ2U9bWV0YXN0cmluZy5tYXRjaChoaWdobGlnaHRMaW5lc1JhbmdlUmVnZXgpWzFdO2hpZ2hsaWdodExpbmVzPXJhbmdlUGFyc2VyLnBhcnNlKGhpZ2hsaWdodExpbmVzUmFuZ2UpLmZpbHRlcihuPT5uPjApO31pZihtZXRhc3RyaW5nJiZjb2RlQmxvY2tUaXRsZVJlZ2V4LnRlc3QobWV0YXN0cmluZykpey8vIFRlc3RlZCBhYm92ZQovLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5vbi1udWxsLWFzc2VydGlvbgpjb2RlQmxvY2tUaXRsZT1tZXRhc3RyaW5nLm1hdGNoKGNvZGVCbG9ja1RpdGxlUmVnZXgpWzBdLnNwbGl0KCd0aXRsZT0nKVsxXS5yZXBsYWNlKC8iKy9nLCcnKTt9bGV0IGxhbmd1YWdlPWxhbmd1YWdlQ2xhc3NOYW1lJiZsYW5ndWFnZUNsYXNzTmFtZS5yZXBsYWNlKC9sYW5ndWFnZS0vLCcnKTtpZighbGFuZ3VhZ2UmJnByaXNtLmRlZmF1bHRMYW5ndWFnZSl7bGFuZ3VhZ2U9cHJpc20uZGVmYXVsdExhbmd1YWdlO30vLyBvbmx5IGRlY2xhcmF0aW9uIE9SIGRpcmVjdGl2ZSBoaWdobGlnaHQgY2FuIGJlIHVzZWQgZm9yIGEgYmxvY2sKbGV0IGNvZGU9Y2hpbGRyZW4ucmVwbGFjZSgvXG4kLywnJyk7aWYoaGlnaGxpZ2h0TGluZXMubGVuZ3RoPT09MCYmbGFuZ3VhZ2UhPT11bmRlZmluZWQpe2xldCByYW5nZT0nJztjb25zdCBkaXJlY3RpdmVSZWdleD1oaWdobGlnaHREaXJlY3RpdmVSZWdleChsYW5ndWFnZSk7Ly8gZ28gdGhyb3VnaCBsaW5lIGJ5IGxpbmUKY29uc3QgbGluZXM9Y2hpbGRyZW4ucmVwbGFjZSgvXG4kLywnJykuc3BsaXQoJ1xuJyk7bGV0IGJsb2NrU3RhcnQ7Ly8gbG9vcCB0aHJvdWdoIGxpbmVzCmZvcihsZXQgaW5kZXg9MDtpbmRleDxsaW5lcy5sZW5ndGg7KXtjb25zdCBsaW5lPWxpbmVzW2luZGV4XTsvLyBhZGp1c3QgZm9yIDAtaW5kZXgKY29uc3QgbGluZU51bWJlcj1pbmRleCsxO2NvbnN0IG1hdGNoPWxpbmUubWF0Y2goZGlyZWN0aXZlUmVnZXgpO2lmKG1hdGNoIT09bnVsbCl7Y29uc3QgZGlyZWN0aXZlPW1hdGNoLnNsaWNlKDEpLnJlZHVjZSgoZmluYWwsaXRlbSk9PmZpbmFsfHxpdGVtLHVuZGVmaW5lZCk7c3dpdGNoKGRpcmVjdGl2ZSl7Y2FzZSdoaWdobGlnaHQtbmV4dC1saW5lJzpyYW5nZSs9YCR7bGluZU51bWJlcn0sYDticmVhaztjYXNlJ2hpZ2hsaWdodC1zdGFydCc6YmxvY2tTdGFydD1saW5lTnVtYmVyO2JyZWFrO2Nhc2UnaGlnaGxpZ2h0LWVuZCc6cmFuZ2UrPWAke2Jsb2NrU3RhcnR9LSR7bGluZU51bWJlci0xfSxgO2JyZWFrO2RlZmF1bHQ6YnJlYWs7fWxpbmVzLnNwbGljZShpbmRleCwxKTt9ZWxzZXsvLyBsaW5lcyB3aXRob3V0IGRpcmVjdGl2ZXMgYXJlIHVuY2hhbmdlZAppbmRleCs9MTt9fWhpZ2hsaWdodExpbmVzPXJhbmdlUGFyc2VyLnBhcnNlKHJhbmdlKTtjb2RlPWxpbmVzLmpvaW4oJ1xuJyk7fWNvbnN0IGhhbmRsZUNvcHlDb2RlPSgpPT57Y29weShjb2RlKTtzZXRTaG93Q29waWVkKHRydWUpO3NldFRpbWVvdXQoKCk9PnNldFNob3dDb3BpZWQoZmFsc2UpLDIwMDApO307cmV0dXJuLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoSGlnaGxpZ2h0LF9leHRlbmRzKHt9LGRlZmF1bHRQcm9wcyx7a2V5OlN0cmluZyhtb3VudGVkKSx0aGVtZTpwcmlzbVRoZW1lLGNvZGU6Y29kZS8vIEB0cy1leHBlY3QtZXJyb3I6IHByaXNtLXJlYWN0LXJlbmRlcmVyIGRvZXNuJ3QgZXhwb3J0IExhbmd1YWdlIHR5cGUKLGxhbmd1YWdlOmxhbmd1YWdlfSksKHtjbGFzc05hbWUsc3R5bGUsdG9rZW5zLGdldExpbmVQcm9wcyxnZXRUb2tlblByb3BzfSk9Pi8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LG51bGwsY29kZUJsb2NrVGl0bGUmJi8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLHtzdHlsZTpzdHlsZSxjbGFzc05hbWU6c3R5bGVzLmNvZGVCbG9ja1RpdGxlfSxjb2RlQmxvY2tUaXRsZSksLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIse2NsYXNzTmFtZTpzdHlsZXMuY29kZUJsb2NrQ29udGVudH0sLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImJ1dHRvbiIse3RhYkluZGV4OjAscmVmOmJ1dHRvbix0eXBlOiJidXR0b24iLCJhcmlhLWxhYmVsIjoiQ29weSBjb2RlIHRvIGNsaXBib2FyZCIsY2xhc3NOYW1lOmNsc3goc3R5bGVzLmNvcHlCdXR0b24se1tzdHlsZXMuY29weUJ1dHRvbldpdGhUaXRsZV06Y29kZUJsb2NrVGl0bGV9KSxvbkNsaWNrOmhhbmRsZUNvcHlDb2RlfSxzaG93Q29waWVkPydDb3BpZWQnOidDb3B5JyksLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIse2NsYXNzTmFtZTpjbHN4KGNsYXNzTmFtZSxzdHlsZXMuY29kZUJsb2NrLHtbc3R5bGVzLmNvZGVCbG9ja1dpdGhUaXRsZV06Y29kZUJsb2NrVGl0bGV9KX0sLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIse2NsYXNzTmFtZTpzdHlsZXMuY29kZUJsb2NrTGluZXMsc3R5bGU6c3R5bGV9LHRva2Vucy5tYXAoKGxpbmUsaSk9PntpZihsaW5lLmxlbmd0aD09PTEmJmxpbmVbMF0uY29udGVudD09PScnKXtsaW5lWzBdLmNvbnRlbnQ9J1xuJzsvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXBhcmFtLXJlYXNzaWduCn1jb25zdCBsaW5lUHJvcHM9Z2V0TGluZVByb3BzKHtsaW5lLGtleTppfSk7aWYoaGlnaGxpZ2h0TGluZXMuaW5jbHVkZXMoaSsxKSl7bGluZVByb3BzLmNsYXNzTmFtZT1gJHtsaW5lUHJvcHMuY2xhc3NOYW1lfSBkb2N1c2F1cnVzLWhpZ2hsaWdodC1jb2RlLWxpbmVgO31yZXR1cm4vKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IixfZXh0ZW5kcyh7a2V5Oml9LGxpbmVQcm9wcyksbGluZS5tYXAoKHRva2VuLGtleSk9Pi8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJzcGFuIixfZXh0ZW5kcyh7a2V5OmtleX0sZ2V0VG9rZW5Qcm9wcyh7dG9rZW4sa2V5fSkpKSkpO30pKSkpKSk7fSk7"},null]}