(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{88:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return s})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return p}));var r=t(2),a=t(6),o=(t(0),t(96)),i=["components"],l={id:"laser-client",title:"Laser \u5ba2\u6237\u7aef",sidebar_label:"Laser \u5ba2\u6237\u7aef"},s={unversionedId:"laser-client",id:"laser-client",isDocsHomePage:!1,title:"Laser \u5ba2\u6237\u7aef",description:"\u76ee\u524d Laser \u63d0\u4f9b\u4e86\u4e24\u79cd\u5b98\u65b9 SDK\uff0c\u4e00\u4e2a\u662f C++\u7248\u672c\uff0c\u53e6\u4e00\u4e2a\u662f Go \u7248\u672c\u3002\u8fd9\u4e24\u79cd SDK \u90fd\u662f\u76f4\u63a5\u4ee5 fbthrift rpc",source:"@site/docs/laser-client.md",slug:"/laser-client",permalink:"/LaserDB/docs/laser-client",editUrl:"https://github.com/algo-data-platform/LaserDB/edit/main/docs/docs/laser-client.md",version:"current",sidebar_label:"Laser \u5ba2\u6237\u7aef",sidebar:"docs",previous:{title:"\u96c6\u7fa4\u914d\u7f6e",permalink:"/LaserDB/docs/cluster-config"},next:{title:"Laser Proxy",permalink:"/LaserDB/docs/laser-proxy"}},c=[{value:"C++ client",id:"c-client",children:[]},{value:"Go client",id:"go-client",children:[]}],u={rightToc:c};function p(e){var n=e.components,t=Object(a.a)(e,i);return Object(o.b)("wrapper",Object(r.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"\u76ee\u524d Laser \u63d0\u4f9b\u4e86\u4e24\u79cd\u5b98\u65b9 SDK\uff0c\u4e00\u4e2a\u662f C++\u7248\u672c\uff0c\u53e6\u4e00\u4e2a\u662f Go \u7248\u672c\u3002\u8fd9\u4e24\u79cd SDK \u90fd\u662f\u76f4\u63a5\u4ee5 fbthrift rpc\nclient \u7684\u5f62\u5f0f\u6765\u8bf7\u6c42 LaserDB\uff0c\u76f8\u5bf9\u4e8e\u901a\u8fc7 redis client \u8bbf\u95ee Laser\nProxy \u7684\u5f62\u5f0f\uff0c\u6027\u80fd\u66f4\u597d\uff0c\u56e0\u6b64\u5bf9\u6027\u80fd\u8981\u6c42\u6bd4\u8f83\u82db\u523b\u7684\u670d\u52a1\u5efa\u8bae\u76f4\u63a5\u4f7f\u7528 SDK\u3002"),Object(o.b)("h2",{id:"c-client"},"C++ client"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-cpp"},'int main(int argc, char *argv[]) {\n    FLAGS_logtostderr = true;\n    folly::Init init(&argc, &argv);\n    // \u8fd9\u91cc\u53ea\u9700\u8981\u4f20\u5165LaserServer\u96c6\u7fa4\u7684service name\u5373\u53ef\n    auto client = std::make_unique<laser::LaserClient>("laser_online");\n    // \u521d\u59cb\u5316client\n    client->init();\n\n    laser::ClientOption option;\n    // \u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4 (ms)\n    option.setReceiveTimeoutMs(100);\n    // \u8bbe\u7f6e\u8bfb\u6a21\u5f0f\uff1a\n    //   MIXED_READ: \u6df7\u5408\u8bfb\u6a21\u5f0f\uff0c\u65e2\u4f1a\u8bfb\u4e3b\uff0c\u4e5f\u53ef\u80fd\u8bfb\u4ece\n    //   LEADER_READ: \u53ea\u8bfb\u4e3b\n    //   FOLLOWER_READ: \u53ea\u8bfb\u4ece\n    option.setReadMode(laser::ClientRequestReadMode::MIXED_READ);\n\n    laser::LaserKV kv;\n    laser::LaserKey laser_key;\n    // \u8bbe\u7f6e\u5e93\u540d\n    laser_key.set_database_name("dbname");\n    // \u8bbe\u7f6e\u8868\u540d\n    laser_key.set_table_name("tbname");\n    // \u8bbe\u7f6e\u4e3b\u952e\n    laser_key.set_primary_keys({"key"});\n    laser::LaserValue laser_value;\n    // value\n    laser_value.set_string_value("value");\n    kv.set_key(laser_key);\n    kv.set_value(laser_value);\n    auto ret = client->setSync(option, kv);\n    LOG(INFO) << "test set ret: " << ret;\n\n    ret = client->getSync(option, &value, laser_key);\n    LOG(INFO) << "test get ret: " << ret << ",value: " << value;\n\n    return 0;\n}\n')),Object(o.b)("h2",{id:"go-client"},"Go client"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-go"},'import (\n    "log"\n\n    "github.com/algo-data-platform/LaserDB/sdk/go/common/service_router"\n    "github.com/algo-data-platform/LaserDB/sdk/go/laser_client"\n    "github.com/algo-data-platform/LaserDB/sdk/go/laser_client/if/laser"\n    "github.com/hashicorp/consul/api"\n)\n\nfunc main() {\n    client := laser_client.NewLaserClient(&laser_client.ClientConfig{\n        Consul: api.Config{\n            Address: "127.0.0.1:1234", // \u8bbe\u7f6eLaserServer\u96c6\u7fa4\u4f7f\u7528\u7684Consul\u7684\u5730\u5740\n        },\n        LaserServiceName: "laser_online", // LaserServer\u96c6\u7fa4\u670d\u52a1\u540d\u79f0\n        ProjectName:      "demo",         // \u5ba2\u6237\u7aef\u540d\u79f0\uff0cmetrics\u4e2d\u4f1a\u7528\u6765\u533a\u5206\u5ba2\u6237\u7aef\n    })\n    options := laser_client.ClientOption{\n        MaxConnPerServer:        4,                                           // \u8fde\u63a5\u6c60\u914d\u7f6e\n        ConnIdleTimeoutMs:       5,                                           // tcp \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4\n        ReceiveTimeoutMs:        5,                                           // tcp \u63a5\u6536\u6570\u636e\u8d85\u65f6\u65f6\u95f4\n        ConnectionRetry:         3,                                           // tcp \u8fde\u63a5\u8d85\u65f6\u91cd\u8bd5\u6b21\u6570\uff0c\u53d1\u751f\u5728\u8fde\u63a5\u5efa\u7acb\u7684\u65f6\u5019\n        TimeoutRetry:            3,                                           // tcp \u8bf7\u6c42\u8fde\u63a5\u8d85\u65f6\u91cd\u8bd5\u6b21\u6570\uff0c\u4f5c\u7528\u4e8erpc\u8bf7\u6c42\u53d1\u751f\u7684\u65f6\u5019\n        ThriftTransport:         service_router.THRIFT_TRANSPORT_HEADER,      // thrift transport\n        ThriftCompressionMethod: service_router.ThriftCompressionMethod_None, // thrift rpc \u538b\u7f29\u7b97\u6cd5\n        LoadBalance:             service_router.LoadBalanceMethod_ROUNDROBIN, // \u8d1f\u8f7d\u5747\u8861\u7b56\u7565\n        ReadMode:                laser_client.MIXED_READ,                     // \u8bfb\u6a21\u5f0f\n    }\n\n    value := "value"\n    status := client.SetSync(options, laser.LaserKV{\n        Key: &laser.LaserKey{\n            DatabaseName: "dbname",\n            TableName:    "tbname",\n            PrimaryKeys:  []string{"key"},\n        },\n        Value: &laser.LaserValue{\n            StringValue: &value,\n        },\n    })\n    log.Println(status.String())\n\n    status, ret := client.GetSync(options, laser.LaserKey{\n        DatabaseName: "dbname",\n        TableName:    "tbname",\n        PrimaryKeys:  []string{"key"},\n    })\n    log.Println(status.String())\n    log.Println(ret)\n}\n')))}p.isMDXComponent=!0},96:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return b}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=a.a.createContext({}),u=function(e){var n=a.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=u(e.components);return a.a.createElement(c.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},d=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(t),d=r,b=p["".concat(i,".").concat(d)]||p[d]||m[d]||o;return t?a.a.createElement(b,l(l({ref:n},c),{},{components:t})):a.a.createElement(b,l({ref:n},c))}));function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);