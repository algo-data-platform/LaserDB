# Usage:
#   升级包
#   ansible-playbook  predictor_server.yml -i development --tags upgrade
#   手动启动
#   ansible-playbook  predictor_server.yml -i development --tags start
#   手动停止
#   ansible-playbook  predictor_server.yml -i development --tags stop
#   手动重启
#   ansible-playbook  predictor_server.yml -i development --tags restart
#
# instance_name 启动实例名称
# package_name  启动包名称
# package_commit_id 打包ID
#
- name: create service instance dir
  file:
    path: /usr/local/adbot/{{instance_name}}
    owner: adbot
    group: adbot
    state: directory
  tags:
    - init
    - upgrade
- name: create service logs dir
  file:
    path: /usr/local/adbot/{{instance_name}}/logs
    owner: adbot
    group: adbot
    state: directory
  tags:
    - init
    - upgrade
- name: create service data dir
  file:
    path: /usr/local/adbot/{{instance_name}}/data
    owner: adbot
    group: adbot
    state: directory
  tags:
    - init
    - upgrade
- name: get service instance package
  get_url:
    url: "{{ad_core_release_url}}/release/{{package_name}}/{{package_tag}}.tar.gz"
    force: no
    dest: /usr/local/adbot/{{instance_name}}/{{package_tag}}.tar.gz
    owner: adbot
    group: adbot
    mode: 0644
  register: get_package
  tags:
    - upgrade
- name: unarchive service package 
  unarchive:
    src: /usr/local/adbot/{{instance_name}}/{{package_tag}}.tar.gz
    dest: /usr/local/adbot/{{instance_name}}/
    remote_src: yes
  when: "get_package.changed"
  register: unarchive_result
  tags:
    - upgrade
- name: copy service instance to /usr/lib/systemd/system
  become: yes
  vars:
    service_env_path: /usr/local/adbot/{{instance_name}}/env
    service_pid_path: /usr/local/adbot/{{instance_name}}/{{instance_name}}.pid
  template:
    src: roles/service/templates/{{service_file}}.service
    dest: /usr/lib/systemd/system/{{instance_name}}.service
    owner: adbot
    group: adbot
    mode: 0644
  register: service_define
  tags:
    - upgrade
- name: copy service env file 
  template:
    src: roles/service/templates/{{service_env}}.env
    dest: /usr/local/adbot/{{instance_name}}/env
    owner: adbot
    group: adbot
    mode: 0644
  register: service_env_status
  tags:
    - upgrade
- name: reload service daemon
  become: yes
  shell: systemctl daemon-reload
  when: "get_package.changed or unarchive_result.changed or service_define.changed or service_env_status.changed"
  tags:
    - upgrade
- name: restart service
  become: yes
  service:
    name: "{{instance_name}}"
    state: restarted
  tags:
    - upgrade
  when: "get_package.changed or unarchive_result.changed or service_define.changed or service_env_status.changed"
- name: start service
  become: yes
  service:
    name: "{{instance_name}}"
    state: started
    enabled: yes
  tags:
    - start
- name: stop service
  become: yes
  service:
    name: "{{instance_name}}"
    state: stopped
    enabled: no
  tags:
    - stop
- name: restart service
  become: yes
  service:
    name: "{{instance_name}}"
    state: restarted
  tags:
    - restart
- name: change service state available
  shell: curl 'http://{{hostvars[inventory_hostname]['ansible_default_ipv4']['address']}}:{{http_port}}/server/discover_switch?service_name={{service_name}}&state=available' -v
  tags:
    - enable
- name: change service state unavailable
  shell: curl 'http://{{hostvars[inventory_hostname]['ansible_default_ipv4']['address']}}:{{http_port}}/server/discover_switch?service_name={{service_name}}&state=unavailable' -v
  tags:
    - disable
